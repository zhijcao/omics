library(mixOmics)
library(openxlsx)
library(tidyr)
library(dplyr)
library(magrittr)
library(tibble)
library(ggplot2)

lipid <- read.xlsx("C:/zhijuncao/nori/correct_summary of lipid_sample-02132020-2.xlsx")
aa <- read.xlsx("C:/zhijuncao/nori/correct_summary of AA_sample-02132020.xlsx")
dim(lipid)
dim(aa)

lipid_pca <- pca(log(lipid[,-(1:5)]), scale=T, ncomp=2)
aa_pca <- pca(log(aa[,-(1:5)]), scale=T, ncomp=2)

plot(aa_pca$variates$X[,1], aa_pca$variates$X[,2])
plotLoadings(aa_pca)

plot(aa_pca$loadings$X[,1]/sum(aa_pca$loadings$X[,1]), aa_pca$loadings$X[,2]/sum(aa_pca$loadings$X[,2]))

plot(scale(lipid_pca$loadings$X[,1]),scale(lipid_pca$loadings$X[,2]))


edit(plotVar)
aa_pca$rotation
aa_pca$loadings$X
aa_pca$X

correlationloadings <- cor(log(aa[,-(1:6)]), aa_pca$X)
plot(correlationloadings[,1], correlationloadings[,2])


lipid_plsda <- plsda(log(lipid[,-(1:5)]), Y=lipid$Group, scale=T, ncomp=2)
aa_plsda <- plsda(log(aa[,-(1:5)]),  Y=aa$Group, scale=T, ncomp=2)

pdf("C:/zhijuncao/nori/pca-plsda.pdf", width = 8, height = 6)
plotIndiv(lipid_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "141 lipids pca")
plotIndiv(aa_pca,  group=aa$Batch, pch=as.factor(aa$Group), legend = TRUE, ind.names=F, title = "4 amino acids pca")

plotIndiv(lipid_plsda,  group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "141 lipids plsda")
plotIndiv(aa_plsda,  group=aa$Batch, pch=as.factor(aa$Group), legend = TRUE, ind.names=F, title = "4 amino acids plsda")
dev.off()


####empirical Bayes method for batch correction
library(sva)
#lipids
Lpheno <- lipid[,c(1:5)]
Ledata  <-  log(t(as.matrix(lipid[,-c(1:5)])))
colnames(Ledata) <- lipid$SampleID
Lbatch = Lpheno$Batch
Lmod = model.matrix(~as.factor(Group), data=Lpheno)

names(lipid)

# parametric adjustment
combat_Ledata1 = ?ComBat(dat=Ledata, batch=Lbatch, mod=NULL, par.prior=TRUE, prior.plots=T)
df1 <- data.frame(t(combat_Ledata1))
# non-parametric adjustment, mean-only version
combat_Ledata2 = ComBat(dat=Ledata, batch=Lbatch, mod=NULL, par.prior=F, mean.only=TRUE, prior.plots=T)
df2 <- data.frame(t(combat_Ledata2))
# reference-batch version, with covariates
combat_Ledata3 = ComBat(dat=Ledata, batch=Lbatch, mod=Lmod, par.prior=TRUE, ref.batch="b2", prior.plots=T)
df3 <- data.frame(t(combat_Ledata3))
rownames(df1)
dim(df1)
dim(df2)
dim(df3)
write.xlsx(list(loglipid_combatpara=cbind(Lpheno,df1),loglipid_combatnonpara=cbind(Lpheno,df1), loglipid_combatref=cbind(Lpheno,df3)),
           "C:/zhijuncao/nori/loglipid_logcombat.xlsx")
write.xlsx(list(loglipid_combatpara=cbind(Lpheno,exp(df1)),loglipid_combatnonpara=cbind(Lpheno,exp(df1)), loglipid_combatref=cbind(Lpheno,exp(df3))),
           "C:/zhijuncao/nori/lipid_logcombat.xlsx")

####after batch correction, then log
df0_pca <- pca(log(lipid[,-c(1:5)]), scale=T, ncomp=2)
df1_pca <- pca(log(df1), scale=T, ncomp=2)
df2_pca <- pca(log(df2), scale=T, ncomp=2)
df3_pca <- pca(log(df3), scale=T, ncomp=2)

###first log, then batch correction
df0_pca <- pca(log(lipid[,-c(1:5)]), scale=T, ncomp=2)
df1_pca <- pca(df1, scale=T, ncomp=2)
df2_pca <- pca(df2, scale=T, ncomp=2)
df3_pca <- pca(df3, scale=T, ncomp=2)

dim(df3)
lib
library(gridExtra)

p1 <- plotIndiv(df0_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "141 lipids")
p2 <-plotIndiv(df1_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "parametric adjustment")
p3 <-plotIndiv(df2_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "non-parametric adjustment, mean-only")
p4 <-plotIndiv(df3_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "reference-batch version, with covariates")

pdf("C:/zhijuncao/nori/loglipid_pca-before and after batch correction.pdf", width = 16, height = 10)
grid.arrange(p1$graph,p2$graph,p3$graph,p4$graph, nrow=2)
dev.off()


p1 <- plotIndiv(df0_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "Lipids: before correction")
p4 <-plotIndiv(df3_pca, group=lipid$Batch, pch=as.factor(lipid$Group), legend = TRUE, ind.names=F, title = "Lipids: after batch correction")

pdf("C:/zhijuncao/nori/loglipid_pca-before and after batch correction2.pdf", width = 16, height = 6)
grid.arrange(p1$graph, p4$graph, nrow=1)
dev.off()



####pca and plsda analysis

###3D pca and plsda
library(plotly)
lipidcombat <- read.xlsx("C:/zhijuncao/nori/loglipid_logcombat.xlsx", sheet='loglipid_combatref')
#lipidcombat$Treatment <- factor(lipidcombat$Treatment)
tem <- lipidcombat %>% filter(Animal.ID!=583) %>% filter(PND=="PND 100")
tem <- lipidcombat%>% filter(Animal.ID!=583) %>% filter(PND=="PND 145")
names(tem)
tem <- lipidcombat%>% filter(Animal.ID!=583) %>% filter(PND=="PND 200")
tem$PND
tem$Treatment <- factor(tem$Treatment, levels = c('CTRL', 'EB only', 'T+E only', 'EB+T+E'))
tem.pca <-  pca(tem[,-(1:6)], scale = TRUE, ncomp = 3)
tem.plsda <- plsda(tem[,-(1:6)],tem$Group, scale = TRUE, ncomp = 3)
tem.pcadf <- data.frame(tem.pca$variates$X)
tem.plsdf <- data.frame(tem.plsda$variates$X )
dim(tem.plsdf)
tem$Group
unique(tem$Treatment)
#3d pca
plot_ly(tem.pcadf, x = ~PC1, y = ~PC2, z = ~PC3, color = ~tem$Treatment, colors = c('black', 'red', 'green', 'purple')) %>%
  add_markers() %>%
  layout(scene = list(xaxis = list(title = 'PC1'),
                      yaxis = list(title = 'PC2'),
                      zaxis = list(title = 'PC3')))
#3d plsda
plot_ly(tem.plsdf, x = ~comp1, y = ~comp2, z = ~comp3, color = ~tem$Treatment, colors = c('black', 'red', 'green', 'purple')) %>%
  add_markers() %>%
  layout(scene = list(xaxis = list(title = 'X???variate 1'),
                      yaxis = list(title = 'X???variate 2'),
                      zaxis = list(title = 'X???variate 3')))


#### 3d: PND 30 and 90
tem <- lipidcombat %>% filter(Animal.ID!=583) %>% filter(PND=="PND 30")
tem <- lipidcombat%>% filter(Animal.ID!=583) %>% filter(PND=="PND 90")
tem$PND
tem$Treatment <- factor(tem$Treatment, levels = c('CTRL', 'EB-treated'))
tem.pca <-  pca(tem[,-(1:6)], scale = TRUE, ncomp = 3)
tem.plsda <- plsda(tem[,-(1:6)],tem$Group, scale = TRUE, ncomp = 3)
tem.pcadf <- data.frame(tem.pca$variates$X)
tem.plsdf <- data.frame(tem.plsda$variates$X )
tem$Group
unique(tem$Treatment)
#3d pca
plot_ly(tem.pcadf, x = ~PC1, y = ~PC2, z = ~PC3, color = ~tem$Treatment, colors = c('black', 'red')) %>%
  add_markers() %>%
  layout(scene = list(xaxis = list(title = 'PC1'),
                      yaxis = list(title = 'PC2'),
                      zaxis = list(title = 'PC3')))
#3d plsda
plot_ly(tem.plsdf, x = ~comp1, y = ~comp2, z = ~comp3, color = ~tem$Treatment, colors = c('black', 'red')) %>%
  add_markers() %>%
  layout(scene = list(xaxis = list(title = 'X???variate 1'),
                      yaxis = list(title = 'X???variate 2'),
                      zaxis = list(title = 'X???variate 3')))









ggplot(tem.plsdf, aes(comp1, comp2, color=tem$Treatment))+geom_point()

plotIndiv(tem.plsda, group = tem$Treatment, legend=TRUE)

tem <- cbind(lipid[,1:5],df3) %>% filter(Animal.ID!=583)
pdf("C:/zhijuncao/nori/loglipid_combatref_rm583.pdf", width = 6, height = 4)
for (pnd in PND){
  tem1 <- tem %>% filter(PND==pnd)
  #indname <- tem1$Animal.ID
  indname <- FALSE
  tem1.pca <-  pca(tem1[,-(1:5)], scale = TRUE, ncomp = 5)
  tem1.plsda <- plsda(tem1[,-(1:5)],tem1$Group, scale = TRUE, ncomp = 5)
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
}
dev.off()

tem <- cbind(lipid[,1:5],df3) %>% filter(Animal.ID!=583)
pdf("C:/zhijuncao/nori/loglipid_combatref_loading_rm583.pdf", width = 9, height =11)
for (pnd in PND){
  tem1 <- tem %>% filter(PND==pnd)
  tem1.pca <-  pca(tem1[,-(1:5)], scale = TRUE, ncomp = 5)
  tem1.plsda <- plsda(tem1[,-(1:5)],tem1$Group, scale = TRUE, ncomp = 5)
  ?plotLoadings(tem1.pca,  comp=1, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "pca c1"))
  plotLoadings(tem1.pca, comp=2, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "pca c2"))
  plotLoadings(tem1.pca,  comp=3, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "pca c3"))
  
  plotLoadings(tem1.plsda,  comp=1, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "plsda c1"))
  plotLoadings(tem1.plsda,  comp=2, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "plsda c2"))
  plotLoadings(tem1.plsda,  comp=3, legend = TRUE, method = 'median', contrib = "max", title = paste(pnd, "plsda c3"))
}
dev.off()



tem <- cbind(lipid[,1:5],df2)
pdf("C:/zhijuncao/nori/loglipid_combatnonpara_name.pdf", width = 6, height = 4)
for (pnd in PND){
  tem1 <- tem %>% filter(PND==pnd)
  indname <- tem1$Animal.ID
  tem1.pca <-  pca(tem1[,-(1:5)], scale = TRUE, ncomp = 5)
  tem1.plsda <- plsda(tem1[,-(1:5)],tem1$Group, scale = TRUE, ncomp = 5)
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = indname, title = paste(pnd, "pca"))
  
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = indname, title = paste(pnd, "plsda"))
}
dev.off()

tem <- cbind(lipid[,1:5],df1)
pdf("C:/zhijuncao/nori/loglipid_combatpara.pdf", width = 6, height = 4)
for (pnd in PND){
  tem1 <- tem %>% filter(PND==pnd)
  tem1.pca <-  pca(tem1[,-(1:5)], scale = TRUE, ncomp = 5)
  tem1.plsda <- plsda(tem1[,-(1:5)],tem1$Group, scale = TRUE, ncomp = 5)
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = FALSE, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = FALSE, title = paste(pnd, "pca"))
  plotIndiv(tem1.pca, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = FALSE, title = paste(pnd, "pca"))
  
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,2), legend = TRUE, ind.names = FALSE, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(1,3), legend = TRUE, ind.names = FALSE, title = paste(pnd, "plsda"))
  plotIndiv(tem1.plsda, group = tem1$Group, comp=c(2,3), legend = TRUE, ind.names = FALSE, title = paste(pnd, "plsda"))
}
dev.off()

###statistical analysis


library(purrr)
library(multcomp)
noerrorttest <- function(...) {
  obj<-try(t.test(...), silent=TRUE)
  if (is(obj, "try-error")) return(list(p.value=NA)) else return(obj)
}

fdr <- function(x)p.adjust(x, method="BH")
Mean <- function(x)mean(x, na.rm=TRUE)
ratio <- function(x)exp(x-x[1])
lipidcombat <- read.xlsx("C:/zhijuncao/nori/loglipid_logcombat.xlsx", sheet='loglipid_combatref')
lipidcombat <- lipidcombat %>% filter(Animal.ID!=583)
lipidcombat$Treatment <- factor(lipidcombat$Treatment)
lipidcombat$Group
names(lipidcombat)
PND<- unique(lipidcombat$PND)
x <- "lysoPC.a.C14.0"
pnd <- "PND 145"
analytes <- names(lipidcombat)[-c(1:6)]
pnd_re <- list()
for (pnd in PND) {
  
  data <- lipidcombat %>% filter(PND==pnd)
  ratio_re <- data %>% select(-Animal.ID)%>% group_by(Treatment) %>% summarise_if(is.numeric,Mean) %>% 
    mutate_if(is.numeric, ratio) %>% data.frame()
  ratio_re_df <- data.frame(t(as.matrix(ratio_re[,-1]))) %>% select(-1)

  data$Treatment
  
  #dim(ratio_re)
  
    pvalues <- list()
    for (x in analytes){
    m1 <- aov(data[,x] ~ Treatment, data=data)
    re <- glht(m1, linfct=mcp(Treatment="Dunnett"))
    sum_re_pvalue <- summary(re)$test$pvalues
    attr(sum_re_pvalue, "error") <- NULL
    names(sum_re_pvalue) <- names(coefficients(re))
    pvalues[[x]] <- sum_re_pvalue
    }
    
    df_re <- data.frame(do.call(rbind, pvalues))
    fdr_re <- map_df(df_re, ~p.adjust(.x, method="BH"))
    names(fdr_re) <- paste(names(df_re), " FDR")
    names(ratio_re_df) <- paste(names(df_re), " Ratio")
    ratio_re_df <- ratio_re_df %>% rownames_to_column(var="analytes")
    names(df_re) <- paste(names(df_re), "p value")
    pnd_re[[pnd]] <- cbind(ratio_re_df, df_re, fdr_re)
}

write.xlsx(pnd_re, "C:/zhijuncao/nori/loglipid_logcombat_ratio_pvalue_fdr_03162020b.xlsx" ,rownames=TRUE)


levels(lipidcombat$Group) 
level=c( "PND 30 CTRL", "PND 30 EB-treated",
          "PND 90 CTRL", "PND 90 EB-treated",
          "PND 100 CTRL", "PND 100 EB only", "PND 100 T+E only", "PND 100 EB+T+E", 
          "PND 145 CTRL", "PND145 EB only",  "PND 145 T+E only", "PND 145 EB+T+E",  
          "PND 200 CTRL", "PND 200 EB only", "PND 200 T+E only", "PND 200 EB+T+E" 
          )
lipidcombat$Group <-factor(lipidcombat$Group, levels = level)
lipidcombat$PND <-factor(lipidcombat$PND, levels = c("PND 30","PND 90", "PND 100", "PND 145", "PND 200"))
analytes <- names(lipidcombat)[-c(1:6)]
pdf("C:/zhijuncao/nori/loglipid_logcombat_boxplot_fill.pdf", width = 6, height = 5)
for (analyte in analytes){
  p <- ggplot(lipidcombat, aes(Group, get(analyte), fill=PND))+
  theme_bw()+ 
  geom_boxplot()+
  labs(y=analyte)+
  theme(axis.title=element_text(size=10),axis.text=element_text(size=10),axis.text.x=element_text(angle=90))+
  theme(plot.title=element_text(size=14))+
  theme(plot.margin=unit(c(1,1,1,1),"line"))
  print(p)
}
dev.off()


names(df_re)
m2 <- anova(m1)
TukeyHSD(m1)
DunnettTest(m1)


summary(m1)
contrasts(as.factor(lipidcombat$PND))
x <- "lysoPC.a.C14.0"

names(pnd30)

pnd30$Treatment





?perf










library(lmerTest)
library(psycho)
library(mutoss)

lipidcombat <- read.xlsx("C:/zhijuncao/nori/loglipid_logcombat.xlsx", sheet='loglipid_combatref')
x <- "lysoPC.a.C14.0"
fdr <- function(x)p.adjust(x, method="BH")
ba_lm <- function(data=lipidcombat, contrasts1=contrasts1){
  
  re <- list()
  for (x in names(data)[-c(1:6)]){
    cat(x,"  ")
    fml <- paste(x,"~ PND*Treatment")
    fml <-  as.formula(fml)
    fit <- glm(fml, data=data)
    summary(fit)
    results <- psycho::get_contrasts(fit, "PND*Treatment", adjust = "none")
    results$Contrast <- as.character(results$Contrast)
    rownames(results) <- results$Contrast
    results1 <- results[contrasts1, ]
    results1[[x]] <- p.adjust(results1$p, method="BH")
    re[[x]] <- results1[,x]
    
  }
  re1 <- t(data.frame(re)) %>% data.frame()
  str(re1)
  names(re1) <- rownames(results1)
  
  
  re_fdr <- re1 %>% mutate_all(fdr)
  
  names(re_fdr) <- paste(names(re_fdr), "FDR", sep = ": ")
  names(re1) <- paste(names(re1), "p", sep = ": ")
  pfdr <- cbind(re1,re_fdr)
  
  return(pfdr)
}
